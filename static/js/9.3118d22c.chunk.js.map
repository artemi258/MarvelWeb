{"version":3,"sources":["components/pages/SinglePage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelServices.js","hooks/http.hook.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/skeleton/Skeleton.js","utils/setContent.js","../node_modules/regenerator-runtime/runtime.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelServices","getComic","getCharacterName","error","clearError","setProcess","process","useEffect","updater","then","onLoaded","history","setContent","ErrorMessage","src","img","style","display","width","height","objectFit","margin","alt","MarvelServices","loading","setLoading","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","limit","res","results","map","_transformCharacter","getCharacter","name","getComics","item","_transformComics","char","descr","description","length","substr","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Skeleton","className","Spinner","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"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","file":"static/js/9.3118d22c.chunk.js","sourcesContent":["import { useState, useEffect, history } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport useMarvelServices from \"../../services/MarvelServices\";\r\nimport setContent from '../../utils/setContent';\r\n\r\n\r\n    const SinglePage = ({Component, dataType}) => {\r\n        const {id} = useParams();\r\n        const [data, setData] = useState(null);\r\n        const {getComic, getCharacterName, error, clearError, setProcess, process} = useMarvelServices();\r\n\r\n        useEffect(() => {\r\n            updater();\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [id])\r\n\r\n        const updater = () => {\r\n            clearError();\r\n\r\n            switch(dataType) {\r\n                case \"character\": \r\n\r\n                getCharacterName(id)\r\n                .then(onLoaded)\r\n                .then(() => setProcess('confirmed'));\r\n            break;\r\n\r\n                case \"comic\": \r\n                getComic(id)\r\n                .then(onLoaded)\r\n                .then(() => setProcess('confirmed'));\r\n            break;\r\n\r\n            default:\r\n            break;\r\n            }\r\n        }\r\n    \r\n        const onLoaded = (data) => {\r\n            setData(data)\r\n        }\r\n\r\n        if (error) {\r\n            history('/error')\r\n        }\r\n\r\n    return (\r\n        <>\r\n            {setContent(process, Component, data)}\r\n        </>\r\n    )\r\n    }\r\n\r\n    export default SinglePage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","\r\nimport img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst MarvelServices = () => {\r\n    \r\n    const {loading, request, error, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=1edd0447276bb1866d74649bfc5c1316';\r\n    const _baseOffset = 210;\r\n    const _baseLimit = 9;\r\n\r\n\r\n    const getAllCharacters = async (offset = _baseOffset, limit = _baseLimit) => {\r\n         const res = await request(`${_apiBase}characters?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n                return res.data.results.map(_transformCharacter);\r\n     }\r\n     const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n    const getCharacterName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n    const getComics = async (offset = _baseOffset, limit = _baseLimit) => {\r\n        const res = await request(`${_apiBase}comics?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n                return res.data.results.map(item => _transformComics(item));\r\n    }\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n       const descr = !char.description ? \"К сожалению, описания этого персонажа нет\" : char.description;\r\n       const description = descr.length > 200 ? descr.substr(0, 200) + \"...\" : descr;\r\n\r\n        return {\r\n                id: char.id,\r\n                name: char.name,\r\n                description: description,\r\n                thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n                homepage: char.urls[0].url,\r\n                wiki: char.urls[1].url,\r\n                comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\r\n        }\r\n    }\r\n\r\n    return {getAllCharacters, getCharacter, getComics, loading, error, clearError, getComic, getCharacterName, process, setProcess}\r\n}\r\n\r\nexport default MarvelServices;","import { useCallback, useState } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [process, setProcess] = useState('waiting')\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        setLoading(true);\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers})\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n            }\r\n\r\n            const data = await response.json()\r\n\r\n            setLoading(false);\r\n\r\n            return data\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(true);\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n    }, []) \r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n        setProcess('waiting');\r\n    }, [])\r\n\r\n    return {loading, error, request, clearError, process, setProcess}\r\n    \r\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Spinner from '../components/spinner/Spinner';\r\nimport Sceleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Sceleton/>;\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component data={data}/>;\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContent;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}